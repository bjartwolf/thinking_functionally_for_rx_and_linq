#!markdown

https://twitter.com/bjartnes/status/1586761713768173568

https://blog.bjartnes.dev/posts/how-to-think-functionally-when-using-linq-and-reactive-extensions-part-2-datastructures/

#!fsharp

let numbers = [5;6;9]
numbers

#!fsharp

let a = Some 4
a

#!markdown

We let F# know which type of None this is by an explicit type after the :

#!fsharp

let b: int option = None
b

#!fsharp

let textToInt = Map[("One", 1); ("Two", 2); ("Three", 3); ("Four", 4); ("Five", 5); ("Seven", 7); ("Nine", 9) ]
let oneNumber = Map.tryFind "One" textToInt
oneNumber
